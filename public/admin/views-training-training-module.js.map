{"version":3,"sources":["webpack:///./src/app/views/training/training-routing.module.ts","webpack:///./src/app/views/training/training.component.html","webpack:///./src/app/views/training/training.component.ts","webpack:///./src/app/views/training/training.module.ts"],"names":[],"mappings":"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","file":"views-training-training-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { TrainingComponent } from './training.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        data: {\r\n            title: 'Training Management'\r\n        },\r\n        children: [\r\n            {\r\n                path: 'management',\r\n                component: TrainingComponent,\r\n                data: {\r\n                    title: 'Training'\r\n                }\r\n            },\r\n        ]\r\n    }\r\n];\r\n\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class TrainingRoutingModule { }\r\n","module.exports = \"<div class=\\\"animated fadeIn\\\">\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-lg-12\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-header\\\">\\r\\n                    <i class=\\\"fa fa-align-justify\\\"></i> {{moduleName}}\\r\\n\\r\\n                    <span class=\\\"float-right\\\">\\r\\n                            <button *appHasPermission=\\\"modulePermission+'Create'\\\" class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"addData(); mapsModal.show()\\\">\\r\\n                                <i class=\\\"fa fa-plus\\\"></i> Add New</button>&nbsp;\\r\\n                        </span>\\r\\n                </div>\\r\\n\\r\\n                <!--div class=\\\"card-body\\\">\\r\\n                    <button class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"addData()\\\"><i class=\\\"fa fa-plus\\\"></i> Add New</button>&nbsp;\\r\\n                </div-->\\r\\n \\r\\n                <!--serch-->\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <form class=\\\"form-horizontal\\\">\\r\\n                        <div class=\\\"row\\\">                           \\r\\n                            \\r\\n                            <!-- <div class=\\\"col-sm-5\\\">&nbsp;</div> -->\\r\\n                            <div class=\\\"col-sm-3\\\">\\r\\n\\r\\n                                <div class=\\\"form-group row\\\">\\r\\n                                    <!-- <label class=\\\"col-md-4 col-form-label\\\" for=\\\"f-perusahaan\\\">Member</label> -->\\r\\n                                    <div class=\\\"col-md-12\\\">\\r\\n                                        <ng-select [items]=\\\"dd.customer\\\"\\r\\n                                            bindLabel=\\\"first_name\\\"\\r\\n                                            bindValue=\\\"id\\\"\\r\\n                                            placeholder=\\\"- Search Customer Name-\\\"\\r\\n                                            [(ngModel)]=\\\"filter.first_name\\\"\\r\\n                                            #first_name=\\\"ngModel\\\"\\r\\n                                            name=\\\"first_name\\\"\\r\\n                                            (keyup)=\\\"cariData($event)\\\"\\r\\n                                        >\\r\\n                                        </ng-select>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            \\r\\n\\r\\n                            <div class=\\\"col-md-3\\\">\\r\\n                                <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary\\\" (click)=\\\"doSearch()\\\"><i class=\\\"fa fa-search\\\"></i> Filter</button>&nbsp;\\r\\n\\r\\n                                <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary\\\" (click)=\\\"clearSearch()\\\"><i class=\\\"fa fa-ban\\\"></i> UnFilter</button>&nbsp;\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </form>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div *ngIf=\\\"loading\\\" class=\\\"text-warning mb-0 mt-2\\\"><i class=\\\"fa fa-circle-o-notch fa-spin\\\"></i> Loading Data...</div>\\r\\n\\r\\n                    <table *ngIf=\\\"!loading\\\" class=\\\"table table-hover table-striped table-sm\\\">\\r\\n                        <thead>\\r\\n                            <tr>\\r\\n                                <th>No.</th>\\r\\n                                <th>Location</th>\\r\\n                                <th>Training Star</th>\\r\\n                                <th>Price</th>\\r\\n                                <th>Capacity</th>\\r\\n                                <th>Status</th>\\r\\n                                <th>Action</th>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <tr *ngFor=\\\"let row of data | paginate: { id: 'member',\\r\\n                            itemsPerPage: pageSize,\\r\\n                            currentPage: currentPage,\\r\\n                            totalItems: totalItems}; let i = index\\\">\\r\\n                                <td>{{ i+1 }}</td>\\r\\n                                <td>{{ row.location }}</td>\\r\\n                                <td>{{ row.start_training }}</td>\\r\\n                                <td>{{ row.price|number }}</td>\\r\\n                                <td>{{ row.capacity|number }}</td>\\r\\n                                <td>{{ row.note }}</td>\\r\\n                                <td *ngIf=\\\"row.open == 1\\\">Open</td>\\r\\n                                <td *ngIf=\\\"row.open == 0\\\">Close</td>\\r\\n                                <td>\\r\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-warning btn-sm\\\" (click)=\\\"editData(row); mapsModal.show()\\\"><i class=\\\"fa fa-pencil-alt\\\"></i></button>&nbsp;\\r\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"deleteData(row)\\\"><i class=\\\"fa fa-trash\\\"></i></button>&nbsp;\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n\\r\\n                     <div class=\\\"pull-right\\\">\\r\\n                        <pagination-controls id=\\\"member\\\" previousLabel=\\\"\\\" nextLabel=\\\"\\\" autoHide=\\\"true\\\" (pageChange)=\\\"currentPage = $event\\\"></pagination-controls>\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"!showList\\\">\\r\\n\\r\\n        \\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div bsModal #mapsModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"dialog-auto-name\\\">\\r\\n        <div class=\\\"modal-dialog modal-md\\\">\\r\\n            <div class=\\\"modal-content\\\">\\r\\n    \\r\\n                <div class=\\\"modal-header\\\">\\r\\n                    <h4 id=\\\"dialog-auto-name\\\" class=\\\"modal-title pull-left\\\">{{moduleName}}</h4>\\r\\n                    <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"mapsModal.hide(); clearForm()\\\">\\r\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                    </button>&nbsp;\\r\\n                </div>\\r\\n    \\r\\n                <div class=\\\"modal-body\\\">\\r\\n\\r\\n                      <div class=\\\"col-sm-12\\\">\\r\\n\\r\\n\\r\\n\\r\\n                        <form #f=\\\"ngForm\\\" novalidate (ngSubmit)=\\\"saveData(f.value, f.valid)\\\" class=\\\"form-horizontal\\\">\\r\\n\\r\\n                        <div class=\\\"card\\\">\\r\\n                            <div class=\\\"card-header\\\">\\r\\n                                <strong>{{moduleName}}</strong> Add/Edit\\r\\n                            </div>\\r\\n                            <div class=\\\"card-body\\\">\\r\\n\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-sm-12\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"nf-name\\\">Location</label>                                 \\r\\n                                            <input type=\\\"text\\\" id=\\\"location\\\" name=\\\"location\\\" class=\\\"form-control\\\" placeholder=\\\"\\\" [(ngModel)]=\\\"form.location\\\" #location=\\\"ngModel\\\" required>\\r\\n                                           \\r\\n                                        </div>\\r\\n                                        &nbsp;\\r\\n\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"nf-name\\\">Training Start</label>       \\r\\n                                            <input type=\\\"text\\\" bsDatepicker [bsConfig]=\\\"{ dateInputFormat: 'YYYY-MM-DD' }\\\" readonly id=\\\"start_training\\\" name=\\\"start_training\\\" class=\\\"form-control\\\" placeholder=\\\"\\\" [(ngModel)]=\\\"form.start_training\\\" #start_training=\\\"ngModel\\\" required>\\r\\n                                         \\r\\n                                        </div>&nbsp;\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"nf-name\\\">Price</label>       \\r\\n                                            <input type=\\\"text\\\" appEsPriceFormat id=\\\"price\\\" name=\\\"price\\\" class=\\\"form-control\\\" placeholder=\\\"\\\" [(ngModel)]=\\\"form.price\\\" #price=\\\"ngModel\\\" required>\\r\\n                                         \\r\\n                                        </div>&nbsp;\\r\\n\\r\\n                                      \\r\\n                                         <div class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"nf-name\\\">Capacity</label>       \\r\\n                                            <input type=\\\"text\\\" id=\\\"capacity\\\" name=\\\"capacity\\\" class=\\\"form-control\\\" placeholder=\\\"\\\" [(ngModel)]=\\\"form.capacity\\\" #capacity=\\\"ngModel\\\" required>\\r\\n                                         \\r\\n                                        </div>&nbsp;\\r\\n\\r\\n                                         <div class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"nf-name\\\">Note</label>       \\r\\n                                            <textarea type=\\\"text\\\" id=\\\"note\\\" name=\\\"note\\\" class=\\\"form-control\\\" placeholder=\\\"\\\" [(ngModel)]=\\\"form.note\\\" #note=\\\"ngModel\\\" > </textarea>\\r\\n                                         \\r\\n                                        </div>&nbsp;\\r\\n                                         <div class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"nf-name\\\">Status</label>       \\r\\n                                            <select [(ngModel)]=\\\"form.open\\\" #open=\\\"ngModel\\\" id=\\\"open\\\" required\\r\\n                                                    name=\\\"open\\\" class=\\\"form-control\\\">\\r\\n                                                    <option *ngFor=\\\"let row of dd.status\\\" [value]=\\\"row.id\\\">{{ row.name }}</option>\\r\\n                                            </select>\\r\\n                                         \\r\\n                                        </div>&nbsp;                          \\r\\n                                        \\r\\n\\r\\n                                    </div>\\r\\n                                   \\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"card-footer\\\">\\r\\n                                <div *ngIf=\\\"loading\\\" class=\\\"text-warning mb-0 mt-2\\\"><i class=\\\"fa fa-circle-o-notch fa-spin\\\"></i> Proses Data...</div>\\r\\n\\r\\n                                <button *ngIf=\\\"!loading\\\" type=\\\"submit\\\" [disabled]=\\\"!f.valid\\\" class=\\\"btn btn-sm btn-success\\\" id=\\\"submit\\\">\\r\\n                                    <i class=\\\"fa fa-dot-circle-o\\\"></i> Submit</button>&nbsp;\\r\\n                                <button *ngIf=\\\"!loading\\\" type=\\\"reset\\\" class=\\\"btn btn-sm btn-danger\\\" (click)=\\\"clearForm();mapsModal.hide();\\\">\\r\\n                                    <i class=\\\"fa fa-ban\\\"></i> Cancel</button>&nbsp;\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n                        </form>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n    \\r\\n        </div>\\r\\n    </div>\\r\\n\"","import { Component , ViewChild} from '@angular/core';\r\nimport {\r\n    MemberService,\r\n    CustomerService,\r\n    TrainingService,\r\n    RankService,\r\n    AlertService,\r\n} from '../../services/index';\r\nimport { BaseComponent } from '../system/base.component';\r\nimport { ModalDirective } from 'ngx-bootstrap/modal';\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    templateUrl: 'training.component.html'\r\n})\r\n\r\nexport class TrainingComponent extends BaseComponent {\r\n\r\n\r\n    @ViewChild('f') htmlForm: HTMLFormElement;\r\n    @ViewChild('mapsModal') mapsModal: ModalDirective;\r\n\r\n\r\n\r\n    dd: any = {\r\n        status: [\r\n            { id: 1, name: 'Open' },\r\n            { id: 0, name: 'Close' }\r\n        ],\r\n\r\n        gender: [\r\n            { id: 1, name: 'Female' },\r\n            { id: 0, name: 'Male' }\r\n        ],\r\n        married: [\r\n            { id: 1, name: 'Married' },\r\n            { id: 0, name: 'Single' }\r\n        ],\r\n\r\n        position: [\r\n            { id: 1, name: 'Left' },\r\n            { id: 2, name: 'Middle' },\r\n            { id: 3, name: 'Right' },\r\n        ],\r\n        customer: [],\r\n        rank: []\r\n    };\r\n\r\n    constructor(\r\n        private mainService: TrainingService,\r\n        private rankService: RankService,\r\n        private alert: AlertService) {\r\n        super(alert);\r\n        this.moduleName = 'Data Training';\r\n        this.moduleForm = {\r\n\r\n            'location'  : '',\r\n            'start_training'   : '',\r\n            'price'    : '',\r\n            'email'       : '',\r\n            'password'    : '',\r\n            'open'        : 1\r\n\r\n        };\r\n        this.moduleFilter = {\r\n            'location': '',\r\n            'start_training': '',\r\n            'open': ''\r\n        };\r\n        this.model = mainService;\r\n        this.modulePermission = 'Training.Management.';\r\n    }\r\n\r\n    /**\r\n     * function loaddependencies untuk load data service\r\n     */\r\n    loadDependencies() {\r\n       \r\n    }\r\n\r\n\r\n    /**\r\n     * Validasi Data Form Utama\r\n     *\r\n     * @returns boolean hasil validasi true/false\r\n     */\r\n    validate() {\r\n      \r\n        return true;\r\n    }\r\n\r\n    modalHide() {\r\n\r\n        this.mapsModal.hide();\r\n    };\r\n\r\n\r\n\r\n\r\n    cariData(q) {\r\n\r\n        const xy = q.target.value;\r\n\r\n        if(xy.length < 3) {\r\n            return false;\r\n        }\r\n\r\n       this.mainService.get({first_name: xy}).subscribe(\r\n            (res: any) => {\r\n                this.dd.customer = res.data;\r\n            },\r\n            (err) => {\r\n                this.alert.error('Failed to load data');\r\n            }\r\n        );\r\n    }\r\n\r\n \r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\n\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\n\r\nimport { TrainingRoutingModule } from './training-routing.module';\r\n\r\nimport {\r\n    MemberService,\r\n    CustomerService,\r\n    TrainingService,\r\n    RankService,\r\n    AlertService,\r\n} from '../../services/index';\r\nimport { TrainingComponent } from './training.component';\r\n\r\n\r\n\r\n@NgModule({\r\n    imports: [\r\n        SharedModule,\r\n        TrainingRoutingModule,\r\n        BsDatepickerModule.forRoot(),\r\n        ModalModule.forRoot(),\r\n        TabsModule.forRoot()\r\n    ],\r\n    declarations: [\r\n        TrainingComponent,\r\n    ],\r\n    providers: [\r\n\r\n        MemberService,\r\n        CustomerService,\r\n        TrainingService,\r\n        RankService,\r\n        AlertService,\r\n    ]\r\n})\r\nexport class TrainingModule { }\r\n"],"sourceRoot":""}